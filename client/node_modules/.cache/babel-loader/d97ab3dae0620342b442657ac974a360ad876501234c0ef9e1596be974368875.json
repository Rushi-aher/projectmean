{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushi\\\\Desktop\\\\meanstackproject2\\\\easy-link-app\\\\client\\\\src\\\\pages\\\\Auth\\\\PasswordReset.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TextInput from \"../../components/TextInput/TextInput\";\nimport Button from \"../../components/Button/Button\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport \"./auth.css\";\nimport { resetPassword, verifyToken } from \"../../Services/authServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [password, setPassword] = React.useState(\"\");\n  const [tokenVerified, setTokenVerified] = React.useState(false);\n  const [isResetSuccess, setIsResetSuccess] = React.useState(false);\n  const [resetToken, setResetToken] = React.useState(\"\");\n  const [searchParams] = useSearchParams();\n  React.useEffect(() => {\n    const verify = async () => {\n      const token = searchParams.get(\"resetToken\");\n      if (token) {\n        setResetToken(token);\n        setTokenVerified(await verifyToken(token));\n      } else {\n        setTokenVerified(false);\n      }\n    };\n    verify();\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/assets/images/logo.png`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), tokenVerified ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth__form\",\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Password\",\n            value: password,\n            onChange: val => setPassword(val.toLocaleString()),\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth__action\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Reset password\",\n            onClick: async () => {\n              const isResetDone = await resetPassword(resetToken, password);\n              if (isResetDone) {\n                setIsResetSuccess(true);\n              } else {\n                setIsResetSuccess(false);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: isResetSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Reset successfully \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 38\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__form\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"U6MZxvqoHH7VDGnVBeBuYrbZK+U=\", false, function () {\n  return [useSearchParams];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","TextInput","Button","Link","useSearchParams","resetPassword","verifyToken","PasswordReset","password","setPassword","useState","tokenVerified","setTokenVerified","isResetSuccess","setIsResetSuccess","resetToken","setResetToken","searchParams","useEffect","verify","token","get","process","env","PUBLIC_URL","val","toLocaleString","isResetDone"],"sources":["C:/Users/rushi/Desktop/meanstackproject2/easy-link-app/client/src/pages/Auth/PasswordReset.tsx"],"sourcesContent":["import React from \"react\";\r\nimport TextInput from \"../../components/TextInput/TextInput\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\n\r\nimport \"./auth.css\";\r\nimport { resetPassword, verifyToken } from \"../../Services/authServices\";\r\nconst PasswordReset = () => {\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [tokenVerified, setTokenVerified] = React.useState(false);\r\n  const [isResetSuccess, setIsResetSuccess] = React.useState(false);\r\n  const [resetToken, setResetToken] = React.useState(\"\");\r\n  const [searchParams] = useSearchParams();\r\n\r\n  React.useEffect(() => {\r\n    const verify = async () => {\r\n      const token = searchParams.get(\"resetToken\");\r\n\r\n      if (token) {\r\n        setResetToken(token);\r\n        setTokenVerified(await verifyToken(token));\r\n      } else {\r\n        setTokenVerified(false);\r\n      }\r\n    };\r\n    verify();\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"auth__container\">\r\n        <img src={`${process.env.PUBLIC_URL}/assets/images/logo.png`} alt=\"\" />\r\n        {tokenVerified ? (\r\n          <>\r\n            <div className=\"auth__form\">\r\n              <TextInput\r\n                label=\"Password\"\r\n                value={password}\r\n                onChange={(val) => setPassword(val.toLocaleString())}\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"auth__action\">\r\n              <Button\r\n                label=\"Reset password\"\r\n                onClick={async () => {\r\n                  const isResetDone = await resetPassword(resetToken, password);\r\n                  if (isResetDone) {\r\n                    setIsResetSuccess(true);\r\n                  } else {\r\n                    setIsResetSuccess(false);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              {isResetSuccess && (\r\n                <p>\r\n                  Reset successfully <Link to=\"/login\">Login</Link>{\" \"}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"auth__form\">\r\n            <p>Invalid token</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}