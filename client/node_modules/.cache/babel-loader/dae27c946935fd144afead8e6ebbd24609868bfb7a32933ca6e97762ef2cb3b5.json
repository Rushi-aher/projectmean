{"ast":null,"code":"export var REGISTRY_FINALIZE_AFTER = 10000;\nexport var REGISTRY_SWEEP_INTERVAL = 10000;\nvar TimerBasedFinalizationRegistry = /** @class */function () {\n  function TimerBasedFinalizationRegistry(finalize) {\n    var _this = this;\n    Object.defineProperty(this, \"finalize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: finalize\n    });\n    Object.defineProperty(this, \"registrations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, \"sweepTimeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // Bound so it can be used directly as setTimeout callback.\n    Object.defineProperty(this, \"sweep\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (maxAge) {\n        if (maxAge === void 0) {\n          maxAge = REGISTRY_FINALIZE_AFTER;\n        }\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(_this.sweepTimeout);\n        _this.sweepTimeout = undefined;\n        var now = Date.now();\n        _this.registrations.forEach(function (registration, token) {\n          if (now - registration.registeredAt >= maxAge) {\n            _this.finalize(registration.value);\n            _this.registrations.delete(token);\n          }\n        });\n        if (_this.registrations.size > 0) {\n          _this.scheduleSweep();\n        }\n      }\n    });\n    // Bound so it can be exported directly as clearTimers test utility.\n    Object.defineProperty(this, \"finalizeAllImmediately\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        _this.sweep(0);\n      }\n    });\n  }\n  // Token is actually required with this impl\n  Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"register\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target, value, token) {\n      this.registrations.set(token, {\n        value: value,\n        registeredAt: Date.now()\n      });\n      this.scheduleSweep();\n    }\n  });\n  Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"unregister\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (token) {\n      this.registrations.delete(token);\n    }\n  });\n  Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"scheduleSweep\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.sweepTimeout === undefined) {\n        this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL);\n      }\n    }\n  });\n  return TimerBasedFinalizationRegistry;\n}();\nexport { TimerBasedFinalizationRegistry };\nexport var UniversalFinalizationRegistry = typeof FinalizationRegistry !== \"undefined\" ? FinalizationRegistry : TimerBasedFinalizationRegistry;","map":{"version":3,"mappings":"AAQA,OAAO,IAAMA,uBAAuB,GAAG,KAAM;AAC7C,OAAO,IAAMC,uBAAuB,GAAG,KAAM;AAE7C;EAII,wCAA6BC,QAA4B;IAAzD;;;;;aAA6BA;;IAH7BC;;;;aAA0E,IAAIC,GAAG;;IACjFD;;;;;;IAiBA;IACAA;;;;aAAQ,UAACE,MAAgC;QAAhC;UAAAA,gCAAgC;QAAA;QACrC;QACAC,YAAY,CAACC,KAAI,CAACC,YAAY,CAAC;QAC/BD,KAAI,CAACC,YAAY,GAAGC,SAAS;QAE7B,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,EAAE;QACtBH,KAAI,CAACK,aAAa,CAACC,OAAO,CAAC,UAACC,YAAY,EAAEC,KAAK;UAC3C,IAAIL,GAAG,GAAGI,YAAY,CAACE,YAAY,IAAIX,MAAM,EAAE;YAC3CE,KAAI,CAACL,QAAQ,CAACY,YAAY,CAACG,KAAK,CAAC;YACjCV,KAAI,CAACK,aAAa,CAACM,MAAM,CAACH,KAAK,CAAC;;QAExC,CAAC,CAAC;QAEF,IAAIR,KAAI,CAACK,aAAa,CAACO,IAAI,GAAG,CAAC,EAAE;UAC7BZ,KAAI,CAACa,aAAa,EAAE;;MAE5B;;IAEA;IACAjB;;;;aAAyB;QACrBI,KAAI,CAACc,KAAK,CAAC,CAAC,CAAC;MACjB;;EArC4D;EAE5D;;;;;WACA,UAASC,MAAc,EAAEL,KAAQ,EAAEF,KAAc;MAC7C,IAAI,CAACH,aAAa,CAACW,GAAG,CAACR,KAAK,EAAE;QAC1BE,KAAK;QACLD,YAAY,EAAEL,IAAI,CAACD,GAAG;OACzB,CAAC;MACF,IAAI,CAACU,aAAa,EAAE;IACxB;;;;;;WAEA,UAAWL,KAAc;MACrB,IAAI,CAACH,aAAa,CAACM,MAAM,CAACH,KAAK,CAAC;IACpC;;;;;;WA0BA;MACI,IAAI,IAAI,CAACP,YAAY,KAAKC,SAAS,EAAE;QACjC,IAAI,CAACD,YAAY,GAAGgB,UAAU,CAAC,IAAI,CAACH,KAAK,EAAEpB,uBAAuB,CAAC;;IAE3E;;EACJ,qCAAC;AAAD,CAAC,EAhDD;;AAkDA,OAAO,IAAMwB,6BAA6B,GACtC,OAAOC,oBAAoB,KAAK,WAAW,GACrCA,oBAAoB,GACpBC,8BAA8B","names":["REGISTRY_FINALIZE_AFTER","REGISTRY_SWEEP_INTERVAL","finalize","Object","Map","maxAge","clearTimeout","_this","sweepTimeout","undefined","now","Date","registrations","forEach","registration","token","registeredAt","value","delete","size","scheduleSweep","sweep","target","set","setTimeout","UniversalFinalizationRegistry","FinalizationRegistry","TimerBasedFinalizationRegistry"],"sources":["C:\\Users\\rushi\\Desktop\\meanstackproject2\\easy-link-app\\client\\node_modules\\mobx-react-lite\\src\\utils\\UniversalFinalizationRegistry.ts"],"sourcesContent":["export declare class FinalizationRegistryType<T> {\n    constructor(finalize: (value: T) => void)\n    register(target: object, value: T, token?: object): void\n    unregister(token: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nexport const REGISTRY_FINALIZE_AFTER = 10_000\nexport const REGISTRY_SWEEP_INTERVAL = 10_000\n\nexport class TimerBasedFinalizationRegistry<T> implements FinalizationRegistryType<T> {\n    private registrations: Map<unknown, { value: T; registeredAt: number }> = new Map()\n    private sweepTimeout: ReturnType<typeof setTimeout> | undefined\n\n    constructor(private readonly finalize: (value: T) => void) {}\n\n    // Token is actually required with this impl\n    register(target: object, value: T, token?: object) {\n        this.registrations.set(token, {\n            value,\n            registeredAt: Date.now()\n        })\n        this.scheduleSweep()\n    }\n\n    unregister(token: unknown) {\n        this.registrations.delete(token)\n    }\n\n    // Bound so it can be used directly as setTimeout callback.\n    sweep = (maxAge = REGISTRY_FINALIZE_AFTER) => {\n        // cancel timeout so we can force sweep anytime\n        clearTimeout(this.sweepTimeout)\n        this.sweepTimeout = undefined\n\n        const now = Date.now()\n        this.registrations.forEach((registration, token) => {\n            if (now - registration.registeredAt >= maxAge) {\n                this.finalize(registration.value)\n                this.registrations.delete(token)\n            }\n        })\n\n        if (this.registrations.size > 0) {\n            this.scheduleSweep()\n        }\n    }\n\n    // Bound so it can be exported directly as clearTimers test utility.\n    finalizeAllImmediately = () => {\n        this.sweep(0)\n    }\n\n    private scheduleSweep() {\n        if (this.sweepTimeout === undefined) {\n            this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL)\n        }\n    }\n}\n\nexport const UniversalFinalizationRegistry =\n    typeof FinalizationRegistry !== \"undefined\"\n        ? FinalizationRegistry\n        : TimerBasedFinalizationRegistry\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}