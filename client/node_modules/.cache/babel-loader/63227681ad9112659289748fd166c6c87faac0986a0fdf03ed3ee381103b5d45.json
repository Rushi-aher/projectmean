{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushi\\\\Desktop\\\\meanstackproject2\\\\easy-link-app\\\\client\\\\src\\\\components\\\\UrlTable\\\\UrlTable.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./urlTable.css\";\n\n// Define an interface for column\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UrlTable = _ref => {\n  _s();\n  let {\n    columns,\n    rows\n  } = _ref;\n  const [isMobile, setIsMobile] = React.useState(window.innerWidth <= 769);\n  React.useEffect(() => {\n    const handleWindowSize = e => {\n      const w = e.target;\n      if (w.innerWidth <= 769) {\n        setIsMobile(true);\n      } else {\n        setIsMobile(false);\n      }\n    };\n    window.addEventListener(\"resize\", handleWindowSize);\n    return () => window.removeEventListener(\"resize\", handleWindowSize);\n  });\n  const renderDesktopView = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"main-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: column.label\n          }, column.field, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[column.field]\n          }, row.id + column.field, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMobileView = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"main-table mobile-table\",\n      children: rows.map(row => /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: columns.map(column => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [!column.hideLabelinMobile && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [column.label, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 47\n          }, this), row[column.field]]\n        }, row.id + column.field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isMobile ? renderMobileView() : renderDesktopView()\n  }, void 0, false);\n};\n_s(UrlTable, \"kdYt6nYkAn6+JcBOFgm45Jes2nI=\");\n_c = UrlTable;\nexport default UrlTable;\nvar _c;\n$RefreshReg$(_c, \"UrlTable\");","map":{"version":3,"names":["React","UrlTable","columns","rows","isMobile","setIsMobile","useState","window","innerWidth","useEffect","handleWindowSize","e","w","target","addEventListener","removeEventListener","renderDesktopView","map","column","label","field","row","id","renderMobileView","hideLabelinMobile"],"sources":["C:/Users/rushi/Desktop/meanstackproject2/easy-link-app/client/src/components/UrlTable/UrlTable.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport \"./urlTable.css\";\r\n\r\n// Define an interface for column\r\ninterface Column {\r\n  label: string;\r\n  field: string;\r\n  hideLabelinMobile?: boolean;\r\n}\r\n// Define an interface for row\r\ninterface Row {\r\n  [key: string]: any; // The data object for this row\r\n}\r\n// Define an interface for props\r\ninterface Props {\r\n  columns: Column[]; // An array of columns\r\n  rows: Row[]; // An array of rows\r\n}\r\nconst UrlTable: React.FC<Props> = ({ columns, rows }) => {\r\n  const [isMobile, setIsMobile] = React.useState(window.innerWidth <= 769);\r\n\r\n  React.useEffect(() => {\r\n    const handleWindowSize = (e: UIEvent) => {\r\n      const w = e.target as Window;\r\n      if (w.innerWidth <= 769) {\r\n        setIsMobile(true);\r\n      } else {\r\n        setIsMobile(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", handleWindowSize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowSize);\r\n  });\r\n\r\n  const renderDesktopView = () => {\r\n    return (\r\n      <table className=\"main-table\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((column) => (\r\n              <th key={column.field}>{column.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {columns.map((column) => (\r\n                <td key={row.id + column.field}>{row[column.field]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  const renderMobileView = () => {\r\n    return (\r\n      <table className=\"main-table mobile-table\">\r\n        {rows.map((row) => (\r\n          <thead key={row.id}>\r\n            {columns.map((column) => (\r\n              <tr key={row.id + column.field}>\r\n                {!column.hideLabelinMobile && <h3>{column.label}:</h3>}\r\n                {row[column.field]}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n        ))}\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return <>{isMobile ? renderMobileView() : renderDesktopView()}</>;\r\n};\r\n\r\nexport default UrlTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,gBAAgB;;AAEvB;AAAA;AAAA;AAeA,MAAMC,QAAyB,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAAEC,OAAO;IAAEC;EAAK,CAAC;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC;EAExER,KAAK,CAACS,SAAS,CAAC,MAAM;IACpB,MAAMC,gBAAgB,GAAIC,CAAU,IAAK;MACvC,MAAMC,CAAC,GAAGD,CAAC,CAACE,MAAgB;MAC5B,IAAID,CAAC,CAACJ,UAAU,IAAI,GAAG,EAAE;QACvBH,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLA,WAAW,CAAC,KAAK,CAAC;MACpB;IACF,CAAC;IACDE,MAAM,CAACO,gBAAgB,CAAC,QAAQ,EAAEJ,gBAAgB,CAAC;IACnD,OAAO,MAAMH,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,EAAEL,gBAAgB,CAAC;EACrE,CAAC,CAAC;EAEF,MAAMM,iBAAiB,GAAG,MAAM;IAC9B,oBACE;MAAO,SAAS,EAAC,YAAY;MAAA,wBAC3B;QAAA,uBACE;UAAA,UACGd,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAClB;YAAA,UAAwBA,MAAM,CAACC;UAAK,GAA3BD,MAAM,CAACE,KAAK;YAAA;YAAA;YAAA;UAAA,QACtB;QAAC;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGjB,IAAI,CAACc,GAAG,CAAEI,GAAG,iBACZ;UAAA,UACGnB,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAClB;YAAA,UAAiCG,GAAG,CAACH,MAAM,CAACE,KAAK;UAAC,GAAzCC,GAAG,CAACC,EAAE,GAAGJ,MAAM,CAACE,KAAK;YAAA;YAAA;YAAA;UAAA,QAC/B;QAAC,GAHKC,GAAG,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAKhB;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEZ,CAAC;EACD,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,oBACE;MAAO,SAAS,EAAC,yBAAyB;MAAA,UACvCpB,IAAI,CAACc,GAAG,CAAEI,GAAG,iBACZ;QAAA,UACGnB,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAClB;UAAA,WACG,CAACA,MAAM,CAACM,iBAAiB,iBAAI;YAAA,WAAKN,MAAM,CAACC,KAAK,EAAC,GAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,EACrDE,GAAG,CAACH,MAAM,CAACE,KAAK,CAAC;QAAA,GAFXC,GAAG,CAACC,EAAE,GAAGJ,MAAM,CAACE,KAAK;UAAA;UAAA;UAAA;QAAA,QAI/B;MAAC,GANQC,GAAG,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAQnB;IAAC;MAAA;MAAA;MAAA;IAAA,QACI;EAEZ,CAAC;EAED,oBAAO;IAAA,UAAGlB,QAAQ,GAAGmB,gBAAgB,EAAE,GAAGP,iBAAiB;EAAE,iBAAI;AACnE,CAAC;AAAC,GAxDIf,QAAyB;AAAA,KAAzBA,QAAyB;AA0D/B,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}