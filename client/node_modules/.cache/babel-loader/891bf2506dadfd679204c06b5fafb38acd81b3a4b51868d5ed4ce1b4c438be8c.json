{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rushi\\\\Desktop\\\\meanstackproject2\\\\easy-link-app\\\\client\\\\src\\\\pages\\\\Auth\\\\ForgotPassword.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TextInput from \"../../components/TextInput/TextInput\";\nimport Button from \"../../components/Button/Button\";\nimport { Link } from \"react-router-dom\";\nimport \"./auth.css\";\nimport { forgotPassword } from \"../../Services/authServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = React.useState(\"\");\n  const [isSuccess, setIsSuccess] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${process.env.PUBLIC_URL}/assets/images/logo.png`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), !isSuccess && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth__form\",\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Email\",\n            value: email,\n            onChange: val => setEmail(val.toLocaleString()),\n            placeholder: \"yourname@email.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth__action\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            label: \"Send reset link\",\n            onClick: async () => {\n              const isDone = await forgotPassword(email);\n              setIsSuccess(isDone);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Remembered suddenly? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 38\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isSuccess && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth__form\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Reset instruction sent successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"IM7AI2fVBLMBzBxyV/coXiMu+v8=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","TextInput","Button","Link","forgotPassword","ForgotPassword","email","setEmail","useState","isSuccess","setIsSuccess","process","env","PUBLIC_URL","val","toLocaleString","isDone"],"sources":["C:/Users/rushi/Desktop/meanstackproject2/easy-link-app/client/src/pages/Auth/ForgotPassword.tsx"],"sourcesContent":["import React from \"react\";\r\nimport TextInput from \"../../components/TextInput/TextInput\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./auth.css\";\r\nimport { forgotPassword } from \"../../Services/authServices\";\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [isSuccess, setIsSuccess] = React.useState(false);\r\n  return (\r\n    <div className=\"auth\">\r\n      <div className=\"auth__container\">\r\n        <img src={`${process.env.PUBLIC_URL}/assets/images/logo.png`} alt=\"\" />\r\n        {!isSuccess && (\r\n          <>\r\n            <div className=\"auth__form\">\r\n              <TextInput\r\n                label=\"Email\"\r\n                value={email}\r\n                onChange={(val) => setEmail(val.toLocaleString())}\r\n                placeholder=\"yourname@email.com\"\r\n              />\r\n            </div>\r\n            <div className=\"auth__action\">\r\n              <Button\r\n                label=\"Send reset link\"\r\n                onClick={async () => {\r\n                  const isDone = await forgotPassword(email);\r\n                  setIsSuccess(isDone);\r\n                }}\r\n              />\r\n              <p>\r\n                Remembered suddenly? <Link to=\"/login\">Login</Link>{\" \"}\r\n              </p>\r\n            </div>\r\n          </>\r\n        )}\r\n        {isSuccess && (\r\n          <>\r\n            <div className=\"auth__form\">\r\n              <p>Reset instruction sent successfully</p>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,YAAY;AACnB,SAASC,cAAc,QAAQ,6BAA6B;AAAC;AAAA;AAC7D,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC;EACvD,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACnB;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAK,GAAG,EAAG,GAAEG,OAAO,CAACC,GAAG,CAACC,UAAW,yBAAyB;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,EACtE,CAACJ,SAAS,iBACT;QAAA,wBACE;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB,QAAC,SAAS;YACR,KAAK,EAAC,OAAO;YACb,KAAK,EAAEH,KAAM;YACb,QAAQ,EAAGQ,GAAG,IAAKP,QAAQ,CAACO,GAAG,CAACC,cAAc,EAAE,CAAE;YAClD,WAAW,EAAC;UAAoB;YAAA;YAAA;YAAA;UAAA;QAChC;UAAA;UAAA;UAAA;QAAA,QACE,eACN;UAAK,SAAS,EAAC,cAAc;UAAA,wBAC3B,QAAC,MAAM;YACL,KAAK,EAAC,iBAAiB;YACvB,OAAO,EAAE,YAAY;cACnB,MAAMC,MAAM,GAAG,MAAMZ,cAAc,CAACE,KAAK,CAAC;cAC1CI,YAAY,CAACM,MAAM,CAAC;YACtB;UAAE;YAAA;YAAA;YAAA;UAAA,QACF,eACF;YAAA,WAAG,uBACoB,uBAAC,IAAI;cAAC,EAAE,EAAC,QAAQ;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAO,EAAC,GAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACrD;QAAA;UAAA;UAAA;UAAA;QAAA,QACA;MAAA,gBAET,EACAP,SAAS,iBACR;QAAA,uBACE;UAAK,SAAS,EAAC,YAAY;UAAA,uBACzB;YAAA,UAAG;UAAmC;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA;MACtC,iBAET;IAAA;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAzCIJ,cAAc;AAAA,KAAdA,cAAc;AA2CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}