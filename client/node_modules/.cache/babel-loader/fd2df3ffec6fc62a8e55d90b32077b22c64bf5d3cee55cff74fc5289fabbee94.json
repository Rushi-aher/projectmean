{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { createUrl, deleteUrlByUrlCode, getUrlsForUser } from \"../Services/urlServices\";\nimport snackBarStore from \"../components/common/Snackbar/store/snackBarStore\";\nclass UrlStore {\n  constructor() {\n    this.urlData = [];\n    this.urlDataLoading = false;\n    this.showUrlAddView = false;\n    this.newUrlPayload = {\n      originalLink: \"\",\n      name: \"\"\n    };\n    this.init = () => {\n      this.fetchUrlsForUser();\n    };\n    this.fetchUrlsForUser = async () => {\n      try {\n        this.urlDataLoading = true;\n        const data = await getUrlsForUser();\n        this.setUrlData(data);\n        this.urlDataLoading = false;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.createNewUrl = async () => {\n      try {\n        if (!this.newUrlPayload.originalLink) {\n          alert(\"Original link is required\");\n          return;\n        }\n        await createUrl(this.newUrlPayload);\n        this.fetchUrlsForUser();\n        this.showUrlAddView = false;\n      } catch (error) {}\n    };\n    this.deleteUrl = async urlCode => {\n      await deleteUrlByUrlCode(urlCode);\n      this.fetchUrlsForUser();\n      snackBarStore.showSnackBar(\"Deleted Successfully\", \"success\");\n    };\n    this.setUrlData = data => this.urlData = data;\n    this.setShowUrlAddView = val => this.showUrlAddView = val;\n    makeAutoObservable(this);\n  }\n}\nconst urlStore = new UrlStore();\nexport default urlStore;","map":{"version":3,"names":["makeAutoObservable","createUrl","deleteUrlByUrlCode","getUrlsForUser","snackBarStore","UrlStore","constructor","urlData","urlDataLoading","showUrlAddView","newUrlPayload","originalLink","name","init","fetchUrlsForUser","data","setUrlData","error","console","log","createNewUrl","alert","deleteUrl","urlCode","showSnackBar","setShowUrlAddView","val","urlStore"],"sources":["C:/Users/rushi/Desktop/meanstackproject2/easy-link-app/client/src/store/urlStore.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { UrlPayloadType, UrlType } from \"../types\";\r\nimport {\r\n  createUrl,\r\n  deleteUrlByUrlCode,\r\n  getUrlsForUser,\r\n} from \"../Services/urlServices\";\r\nimport snackBarStore from \"../components/common/Snackbar/store/snackBarStore\";\r\n\r\nclass UrlStore {\r\n  urlData: Array<UrlType> = [];\r\n  urlDataLoading: boolean = false;\r\n  showUrlAddView: boolean = false;\r\n  newUrlPayload: UrlPayloadType = {\r\n    originalLink: \"\",\r\n    name: \"\",\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  init = () => {\r\n    this.fetchUrlsForUser();\r\n  };\r\n\r\n  //Fetch urls for users\r\n  fetchUrlsForUser = async () => {\r\n    try {\r\n      this.urlDataLoading = true;\r\n\r\n      const data = await getUrlsForUser();\r\n      this.setUrlData(data);\r\n      this.urlDataLoading = false;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //create new url\r\n  createNewUrl = async () => {\r\n    try {\r\n      if (!this.newUrlPayload.originalLink) {\r\n        alert(\"Original link is required\");\r\n        return;\r\n      }\r\n      await createUrl(this.newUrlPayload);\r\n      this.fetchUrlsForUser();\r\n      this.showUrlAddView = false;\r\n    } catch (error) {}\r\n  };\r\n\r\n  //delete url\r\n  deleteUrl = async (urlCode: string) => {\r\n    await deleteUrlByUrlCode(urlCode);\r\n    this.fetchUrlsForUser();\r\n    snackBarStore.showSnackBar(\"Deleted Successfully\", \"success\");\r\n  };\r\n\r\n  setUrlData = (data: Array<UrlType>) => (this.urlData = data);\r\n\r\n  setShowUrlAddView = (val: boolean) => (this.showUrlAddView = val);\r\n}\r\n\r\nconst urlStore = new UrlStore();\r\nexport default urlStore;\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,SACEC,SAAS,EACTC,kBAAkB,EAClBC,cAAc,QACT,yBAAyB;AAChC,OAAOC,aAAa,MAAM,mDAAmD;AAE7E,MAAMC,QAAQ,CAAC;EASbC,WAAW,GAAG;IAAA,KARdC,OAAO,GAAmB,EAAE;IAAA,KAC5BC,cAAc,GAAY,KAAK;IAAA,KAC/BC,cAAc,GAAY,KAAK;IAAA,KAC/BC,aAAa,GAAmB;MAC9BC,YAAY,EAAE,EAAE;MAChBC,IAAI,EAAE;IACR,CAAC;IAAA,KAMDC,IAAI,GAAG,MAAM;MACX,IAAI,CAACC,gBAAgB,EAAE;IACzB,CAAC;IAAA,KAGDA,gBAAgB,GAAG,YAAY;MAC7B,IAAI;QACF,IAAI,CAACN,cAAc,GAAG,IAAI;QAE1B,MAAMO,IAAI,GAAG,MAAMZ,cAAc,EAAE;QACnC,IAAI,CAACa,UAAU,CAACD,IAAI,CAAC;QACrB,IAAI,CAACP,cAAc,GAAG,KAAK;MAC7B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,KAGDG,YAAY,GAAG,YAAY;MACzB,IAAI;QACF,IAAI,CAAC,IAAI,CAACV,aAAa,CAACC,YAAY,EAAE;UACpCU,KAAK,CAAC,2BAA2B,CAAC;UAClC;QACF;QACA,MAAMpB,SAAS,CAAC,IAAI,CAACS,aAAa,CAAC;QACnC,IAAI,CAACI,gBAAgB,EAAE;QACvB,IAAI,CAACL,cAAc,GAAG,KAAK;MAC7B,CAAC,CAAC,OAAOQ,KAAK,EAAE,CAAC;IACnB,CAAC;IAAA,KAGDK,SAAS,GAAG,MAAOC,OAAe,IAAK;MACrC,MAAMrB,kBAAkB,CAACqB,OAAO,CAAC;MACjC,IAAI,CAACT,gBAAgB,EAAE;MACvBV,aAAa,CAACoB,YAAY,CAAC,sBAAsB,EAAE,SAAS,CAAC;IAC/D,CAAC;IAAA,KAEDR,UAAU,GAAID,IAAoB,IAAM,IAAI,CAACR,OAAO,GAAGQ,IAAK;IAAA,KAE5DU,iBAAiB,GAAIC,GAAY,IAAM,IAAI,CAACjB,cAAc,GAAGiB,GAAI;IA1C/D1B,kBAAkB,CAAC,IAAI,CAAC;EAC1B;AA0CF;AAEA,MAAM2B,QAAQ,GAAG,IAAItB,QAAQ,EAAE;AAC/B,eAAesB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}